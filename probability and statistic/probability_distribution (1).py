# -*- coding: utf-8 -*-
"""Probability distribution.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12oB3hgS0m7SWQxjSnFPh1j-wdiKd9LK4

# Probability distribution

## The cumulative distribution function(CDF):  
  
    F(x)=P(X≤x)

### Probability Density Function(continuous random variables):     
    
    f(x) = d/dx (F(x)) where F(x) = ∫^x_-∞ f(u)du   

  Determining the probability of lying between any two exact values (a, b):  
    
    P(a≤x≤b)=F(b)−F(a), where b > a   

  The probability density is the derivative of the cumulative distribution function:  
    
    p(x) = F′(x)  
    
  <img src='https://drive.google.com/uc?id=1Lo8r7AGKHUk8U_Xf1TBq7FhLRxPxwtGm'> 
#### 1.The Uniform distribution   X∼U(a, b) 
The uniform distribution is a probability distribution in which every value between an interval from a to b is equally likely to occur.

If a random variable X follows a uniform distribution, then the probability that X takes on a value between x1 and x2 can be found by the following formula:

P(x1 < X < x2) = (x2 – x1) / (b – a)   
f(x)= 1 / (b – a) for a<=x<=b  
  - Probability Distribution Function:  
          F(x) = P (X ≤ x) = 0       for x<a
                       (x-a)/(b-a)  for a<=x<=b
                       1       for x>b
    e.g, X can be in range (a, b) or [a, b]   
       P(c<=x<=d)=(d-c)/(b-a),  X range is [c,d], c can be a.   
  <img src='https://drive.google.com/uc?id=1zs4ze4-HubohjrdCvUJMU5evlef5RLLw'>  
   - The standard uniform distribution   X∼U(0,1)

  - Probability density Function: 
          P=(X=x)=f(x)= 1/(b-a)   for a<=x<=b
                  0     for x<a or x>b 
  <img src='https://drive.google.com/uc?id=1LjSVlIgguYEX_DeUcm50rpmb2VuOUha1'>  
  Mean: 1/2(a+b) 

  The formula for a discrete uniform distribution is   
  P=1/n    
  
  Example in real life(all cases can be considered "fair" ).   
  1. Birthday. The probability:  1/365   
  2. Rolling a Die. The probability:  1/6   

For example, suppose the weight of dolphins is uniformly distributed between 100 pounds and 150 pounds.   
If we randomly select a dolphin at random, we can use the formula above to determine the probability that the chosen dolphin will weigh between 120 and 130 pounds:

P(120 < X < 130) = (130 – 120) / (150 – 100) = 10 / 50 = 0.2

The uniform distribution has the following properties:

Mean: (a + b) / 2   
Median: (a + b) / 2    
Standard Deviation: $ \sqrt{(b-a)^2/12}$    
Variance: $(b – a)^2 / 12$
"""

import  pandas as pd
import seaborn as sns
from scipy.stats import uniform
import numpy as np 
n = 10000
start = 10
width = 20
uniform_data = uniform.rvs(size=n,
                 loc=start, #from 0
                 scale=width #to 10
                 )

pd.DataFrame(uniform_data).plot(kind='density')

"""probability of value between 0 and 2.5."""

print(uniform.cdf(x=2.5,loc=0, scale=10) )

"""Example 1
Suppose a bus shows up at a bus stop every 20 minutes. If you arrive at the bus stop, what is the probability that the bus will show up in 8 minutes or less?   
x<=8
"""

uniform.cdf(x=8, loc=0, scale=20) - uniform.cdf(x=0, loc=0, scale=20)

"""Example 2
The weight of a certain species of frog is uniformly distributed between 15 and 25 grams. If you randomly select a frog, what is the probability that the frog weighs between 17 and 19 grams?   
c=17, d=19, a=15, scale=25-15
"""

uniform.cdf(x=19, loc=15, scale=10) - uniform.cdf(x=17, loc=15, scale=10)

"""Example 3
The length of an NBA game is uniformly distributed between 120 and 170 minutes. What is the probability that a randomly selected NBA game lasts more than 150 minutes?    
x>150
"""

uniform.cdf(x=170, loc=120, scale=50) - uniform.cdf(x=150, loc=120, scale=50)

"""For example, suppose the weight of dolphins is uniformly distributed between 100 pounds and 150 pounds.

We could calculate the following properties for this distribution:   
- Mean weight: (a + b) / 2 = (150 + 100) / 2 = 125
- Median weight: (a + b) / 2 = (150 + 100) / 2 = 125
- Standard Deviation of weight: $ \sqrt{(150-100)^2/12}$ = 14.43
- Variance of weight: $(150 – 100^2 / 12 = 208.33$

#### 2.The Normal Distribution  X∼Poisson(λ)

Normal distributions have the following features:

- Bell shape
- Symmetrical
- Mean and median are equal; both are located at the center of the distribution
- And the Empirical Rule
  - About 68% of data falls within one standard deviation of the mean
  - About 95% of data falls within two standard deviations of the mean
  - About 99.7% of data falls within three standard deviations of the mean   

How to Draw a Normal Curve  
mean of μ=70, σ = 2    
Step 1: Sketch a normal curve.

Step 2: The mean of 70 inches goes in the middle.

Step 3: Each standard deviation is a distance of 2 inches   

<img src='https://drive.google.com/uc?id=1sDmgHAJmKRsF6EqYYEn1VzLSsdbYVRVa'>

### Probability mass Function(PMF)(discrete random variables):  
    f(x)=P(X=xi) where F(x)=sum(P(X=xi)) 
<img src='https://drive.google.com/uc?id=1Tn_dwDeUwBAKrL_QeFyDrjkHKYzL53RJ'>

#### 1.Bernoulli distribution  X∼Bernoulli(p) 
The outcome of a Bernoulli trial can either be 0 or 1. 
  - Probability Distribution Function:  
          F(x) = P (X ≤ x) = 1-p   if x=0
                        p    if x=1   
  
  $P(x)=p^n(1-p)^{1-n} $
  <img src='https://drive.google.com/uc?id=1OgWw-BBiK0v757yCSSb-rn8dAuxnSKPm'>
  - Probability Mass Function: 
          P=(X=x): if success, P(x;p) = p   1  
               if fail, P(x;p) = 1-p   0
  <img src='https://drive.google.com/uc?id=1g-0wwmzFastPzF9T4afGQMgsI7Yc9lq6'>   
  mean: np
"""

from scipy.stats import bernoulli
import matplotlib.pyplot as plt
B = bernoulli.rvs(p=0.2,size=10)
X=[0,1]
r=bernoulli(p=0.2)
print(B )
print(r.pmf(X))
_=plt.hist(B)
plt.grid()
plt.show()

"""#### 2.Binomial Distribution  X∼Bin(n,p)  
two outcomes, i.e, success (with probability p) and failure (with probability 1 - p).  
  - Probability Distribution Function:  
          F(x) = P (X ≤ x)=F(x;p,n)=sum(^n_i)p^i * (1-p)^(n-i)  
  - Probability Mass Function: 
          P=(X=x)=P(x;p,n)=$(C^n_x)p^x * (1-p)^(n-x)$ 
          (C^n_x)=n!/x!(n-x)!

e.g, an experiment that occurs 12 times (n = 12), number of outcomes in question is 5 (k = 5), and probability is 1/6 or 0.17 rounded (p = 0.17).
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import binom

"""The probability of getting any number from 1 to 6 exactly 5 times is:"""

n=12
k=5
p=0.17
x=np.arange(0, n+1)
binomial_pmf = binom.pmf(k, n, p)

print(binomial_pmf)

"""exactly k or fewer."""

n=100
k=5
p=0.05
b=binom.cdf(k, n, p)
print(b)

"""More than k."""

n=100
k=5
p=0.05
prob = 1 - binom.cdf(10, n, p)
print(prob)

"""The probabilities for x(from 0 to 12) values are:"""

n=12
p=0.17
x=np.arange(0, n+1)

binomial_pmf = binom.pmf(x, n, p)

print(binomial_pmf)

"""The binomial probability mass function can be visualize as following:"""

plt.plot(x, binomial_pmf, color='blue')
plt.title(f"Binomial Distribution (n={n}, p={p})")
plt.show()

"""- If rolling the die 12 times, the highest probability for any of those numbers to be observed is 2 times. 

[Binomial Distribution Calculator online](https://www.statology.org/binomial-distribution-calculator/)

The mean of the distribution is: $ μ=np$    
The variance of the distribution is: $ σ^2=np(1-p)$    
The standard deviation of the distribution is: $ σ= \sqrt {np(1-p)}$   

For example, suppose we toss a coin 3 times. Let p = the probability the coin lands on heads.    
The mean number of heads we would expect is μ = np = 3*.5 = 1.5.    
The variance in the number of heads we would expect is σ2 = np(1-p) = 3*.5*(1-.5) = 0.75.

#### 3.Poisson Distribution  X∼Poisson(λ)   
It models the probability that a given number of events will occur within an interval of time independently and at a constant mean rate.  
  - Probability Distribution Function:
P=(X=x)=p(x;λ)=$ \sum_{i=1}^n \frac{e^{-λ}λ^i }{k!}$     

  
  - Probability Mass Function:  

  P=(X=x)=p(x;λ)=$ \frac{e^{-λ}λ^k }{k!}$ 

  where    
  x=0,1,2,3,...   
  λ= mean number of occurrences in the interval  
  e= Euler´s constant≈ 2.71828   
       

  We represent the pmf in two ways, probability mass function table and graph(histogram)
"""

from scipy.stats import poisson
import pandas as pd
import matplotlib.pyplot as plt
data_poisson = poisson.rvs(mu=3, size=10000)
df=pd.DataFrame(data_poisson)
pd.DataFrame(data_poisson).plot(kind='hist',bins=30,title='Uniform Distribution')

"""Example 1: Probability Equal to Some Value

A store sells 3 apples per day on average. What is the probability that they will sell 5 apples on a given day?
"""

from scipy.stats import poisson
import matplotlib.pyplot as plt
print(round(poisson.pmf(k=5, mu=3),5))
x = poisson.rvs(mu=3, size=10000)
plt.hist(x, density=True, edgecolor='black')

"""Example 2: Probability Less than Some Value   
A certain store sells seven footballs per day on average. What is the probability that this store sells four or less footballs in a given day?
"""

print(round(poisson.cdf(k=4, mu=7),5))

"""Example 3: Probability Greater than Some Value

A certain store sells 15 cans of tuna per day on average. What is the probability that this store sells more than 20 cans of tuna in a given day?
"""

print(round(1-poisson.cdf(k=20, mu=15),5))

print(round(poisson.pmf(k=0, mu=3),5))